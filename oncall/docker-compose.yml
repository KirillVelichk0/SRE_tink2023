version: '3'

volumes:
  prometheus_data: {}
  vmdata: {}
  db_logs:
    driver: local
    #driver_opts:
      #device: 
  oncall_logs:
    driver: local
  nginx_oncall_logs:
    driver: local
  filebeatdata:
  grafana-data:
  
  

services:
  grafana:
    image: grafana/grafana:7.5.7
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./configs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    networks:
      - iris

  filebeat:
    depends_on:
     - logstash
     - oncall-web
     - oncall-mysql
    image: elastic/filebeat:8.10.3
    user: root
    volumes:
     - filebeatdata:/usr/share/filebeat/data
     - "./filebeat_ingest_data/:/usr/share/filebeat/ingest_data/"
     - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
     - db_logs:/var/log/mysql
     - oncall_logs:/home/oncall/var/log/uwsgi
     - nginx_oncall_logs:/home/oncall/var/log/nginx
    networks:
      - iris


  elasticsearch:
    image: elasticsearch:7.16.1
    volumes:
      - ./configs/elasticsearch/config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./docker_volumes/elasticsearch/data:/usr/share/elasticsearch/data
      - ./docker_volumes/elasticsearch/logs:/usr/share/elasticsearch/logs/
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "MyPw123"
      discovery.type: single-node
    networks:
      - iris
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: logstash:7.16.2
    volumes:
      - ./configs/logstash/patterns:/usr/share/logstash/config/patterns:ro
      - ./configs/logstash/config.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./configs/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./configs/logstash/pipelines:/usr/share/logstash/config/pipelines:ro
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    networks:
      - iris
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.16.1
    depends_on:
      - elasticsearch
    volumes:
      - ./configs/kibana/config.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - iris
    ports:
      - "5601:5601"


  mysql-exporter:
    image: prom/mysqld-exporter
    command: 
      - "--collect.global_status"
      - "--collect.info_schema.innodb_metrics"
      - "--collect.auto_increment.columns"
      - "--collect.info_schema.processlist"
      - "--collect.binlog_size"
      - "--collect.info_schema.tablestats"
      - "--collect.global_variables"
      - "--collect.info_schema.query_response_time"
      - "--collect.info_schema.userstats"
      - "--collect.info_schema.tables"
      - "--collect.perf_schema.tablelocks"
      - "--collect.perf_schema.file_events"
      - "--collect.perf_schema.eventswaits"
      - "--collect.perf_schema.indexiowaits"
      - "--collect.perf_schema.tableiowaits"
    volumes:
      - ./configs/my.cnf:/.my.cnf
    ports:
      - "9104:9104"
    networks:
      - iris

  custom-exporter:
    build: ./custom_exporter
    ports:
      - "9210:9210"
    networks:
      - iris
      
  oncall-web:
    build: .
    hostname: oncall
    ports:
      - "8081:8081"
    environment:
      - DOCKER_DB_BOOTSTRAP=1
      - IRIS_API_HOST=iris
    volumes:
      - ./configs/config.docker.yaml:/home/oncall/config/config.yaml
      - oncall_logs:/home/oncall/var/log/uwsgi
      - nginx_oncall_logs:/home/oncall/var/log/nginx/
    networks:
      - iris
  
  oncall-mysql:
    hostname: oncall-mysql
    image: mysql:8.0
    volumes:
      #- ./mysql-data:/var/lib/mysql
      - ./db/entr:/docker-entrypoint-initdb.d
      - "db_logs:/var/log/mysql"
      - "./mysql/conf:/etc/mysql/conf.d"
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    networks:
      - iris
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
    - 9100:9100
    networks:
      - iris


  blackbox:
    image: prom/blackbox-exporter
    container_name: blackbox
    hostname: blackbox
    ports:
      - 9115:9115
    restart: unless-stopped
    command:
      - "--config.file=/etc/blackbox/blackbox.yml"
    volumes:
      - ./blackbox:/etc/blackbox
    environment:
      TZ: "Europe/Moscow"
    networks:
      - iris

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    hostname: prometheus
    ports:
    - 9090:9090
    command:
    - '--config.file=/etc/prometheus/prometheus.yml' 
    - '--web.console.libraries=/usr/share/prometheus/console_libraries' 
    - '--web.console.templates=/usr/share/prometheus/consoles'
    #- '--enable_feature=agent'
    volumes:
    - ./prometheus:/etc/prometheus/
    - prometheus_data:/prometheus
    depends_on:
    - cadvisor
    restart: always
    environment:
      - TZ=Europe/Moscow
    networks:
      - iris

      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    restart: always
    networks:
      - iris
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.91.2
    ports:
      - 8428:8428
      - 8089:8089
      - 8089:8089/udp
      - 2003:2003
      - 2003:2003/udp
      - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
    networks:
      - iris
    restart: always



networks:
  iris:
    name: iris
    #ipam:
    # config:
    #  - subnet: "192.168.96.0/20"
    #    gateway: "192.168.96.1"
