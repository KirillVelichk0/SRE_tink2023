В процессе анализа проекта было обнаружено несколько проблем. Для начала кратко их перечислим, после чего рассмотрим детально:
1)Sql скрипты с патчами не вынесены в папку patches, из-за чего их изменения не запускаются файлом entrypoint.py.
2)Изменения, которые должны были быть внесены патчем schema-update.v2.0.0_2023-06-06.sql, также были явно внесены в изначальную структуру базы данных в файле schema.v0.sql.
3)Изменения по добавлению столбца, вносимые файлом schema-update.v2.0.0_2023-06-06.sql, не осуществляют проверки на существование такого столбца в уже сконфигурированной базой данных, в связи с чем даже в случае устранения проблемы 1) произойдет конфликт в связи с добавлением уже существующего столбца. Также стоит учитывать, что в MySQL данная проверка выполняется крайне неудобно.
4)В файле dummy_data.sql операция INSERT происходит без явного перечисления столбцов, в связи с чем происходит неявная подстановка всех существующих столбцов в порядке их объявления. Так как количество значений не соответствует количеству столбцов, СУБД не может выполнить запрос.
5)MySQL не поддерживает синтаксис IF NOT EXISTS для добавления столбцов, в отличие от MariaDB. Либо в проекте предполагается использование mariadb, либо произошла ошибка. Данный синтаксис используется в schema-update.v0-1602184489.sql.
6)Перебор патчей в лексиграфическом порядке файлом entrypoint.py потенциально может привести к ошибке.

Рассмотрим проблему более детально. Первопричиной возникающей ошибки является 4 пункт, а именно описанный в dummy_data.sql запрос на вставку не рассчитан на возможность изменения структуры столбца 'teams'. Исходя из этого, данный запрос в случае появления новых столбцов в таблице "teams" будет вызывать ошибку не смотря даже на то, что значения столбцов могут быть NULL или же имеют определенное стандартное значения. 
Однако это не единственная проблема, которая присутствует в проекте. Во-первых, изменения, вносимые патчами, просто не запускаются, т.к. файл entrypoint.py предполагает существование папки patches, которой нет изначально и которая не появляется на этапе конфигурирования Docker. Таким образом, потенциальные изменения в структуру базы данных просто не будут внесены. Также, даже если устранить данную ошибку, изменения внесены как непосредственно в патч, так и в изначальный файл базы данных. Учитывая проблему 3), на этом этапе возникнет ошибка. Более того, синтаксис IF NOT EXISTS не поддерживается в MySQL, в отличие от родственной ей MariaDB.
Также, есть пункт 6), который также может привести к ошибке. Так как используется лексикографический порядок, после 9 мажорной версии или 9 минорной, 10 мажорная/минорная версия будет применена перед патчем с мажорной/минорной версией 2. В случае, если правильное применение патчей зависит от их порядка, данный механизм в дальнейшем может привести к ошибкам.

Рекомендации по устранению:
1)Во-первых, не использовать синтаксис по вставке записей без явного указания названий вставляемых столбцов. В случае расширения таблицы БД, данный синтаксис приведет к проблемам.
2)Во-вторых, задекларировать, какая именно база данных используется в действительности. В случае, если используется именно MariaDB, ее установку нужно указать явно (на некоторых системах команда на установку MySQL ставит MariaDB, например Arch. К Ubuntu это не относится)
3)Также, все версионные изменения базы данных нужно вынести в виде отдельных скриптов в отдельную папку (как это, видимо, и задумывалось)
4)В-четвертых, версионные изменения не должны вноситься в изначальный файл. Особенно это актуально для MySQL, где проверка столбца на существование возможна только достаточно неудобными методами. Тем самым, будет гарантироваться отсутствие ошибки одинаковых имен.
5)Наконец, текущий перебор файлов патчей зависит именно от лексикографического порядка, из-за чего при дальнейшем развитии проекта может появиться неожиданная ошибка. Следует изменить механизм перебора патчей, например, вести явное инкрементирование версий в коде и смотреть наличие патчей с идентичным номером в названии.

